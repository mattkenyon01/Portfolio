@page "/Games/unityworld"
@using Portfolio.Pages
@using Portfolio.Utilities
@inject IJSRuntime JS

<!-- Chart.js (safe to keep if not globally loaded) -->
<script src="https://cdn.jsdelivr.net/npm/chart.js@4.4.1/dist/chart.umd.min.js"></script>

<!-- Layout & App Bar (Section 1) -->
<style>
    /* Page & global typography */
    body {
        margin: 0;
        padding: 0;
        height: 100vh;
        display: flex;
        flex-direction: column;
        justify-content: flex-start;
        align-items: center;
        background-color: #420f22;
        font-family: 'Segoe UI', sans-serif;
        color: white;
        text-align: center;
    }

    /* App bar */
    .app-bar {
        width: 100%;
        height: 60px;
        background-color: #2e0b18;
        display: flex;
        justify-content: space-between;
        align-items: center;
        padding: 0 20px;
        box-sizing: border-box;
        position: fixed;
        top: 0;
        left: 0;
        z-index: 1000;
    }

        .app-bar .logo {
            font-weight: 700;
            font-size: 1.25rem;
        }

        .app-bar nav {
            display: flex;
            gap: 20px;
        }

            .app-bar nav a {
                color: white;
                text-decoration: none;
                font-weight: 600;
                padding: 8px 12px;
                border-radius: 4px;
                transition: background-color 0.3s;
            }

                .app-bar nav a:hover {
                    background-color: #971d21;
                }

    /* Shared content elements used in hero sections */
    img.main-banner {
        width: 95%;
        max-width: 1200px;
        height: auto;
        margin: 80px 0 20px 0; /* space for fixed app bar */
        border-radius: 20px;
    }

    p.description {
        font-size: 1.2rem;
        font-weight: 400;
        max-width: 800px;
        width: 100%;
        margin: 12px auto 30px auto;
        line-height: 1.6;
        padding-inline: 20px; /* side padding */
        box-sizing: border-box;
    }

    h1 {
        font-size: 3rem;
        font-weight: 700;
        margin: 0 auto;
        max-width: 800px;
        width: 100%;
        padding-inline: 20px; /* keep the title consistent */
        box-sizing: border-box;
    }

    /* Divider between sections */
    hr.section-divider {
        border: none;
        height: 2px;
        width: 100%;
        max-width: 1000px;
        margin: 40px auto;
        background: #e7571d;
        border-radius: 2px;
        padding-inline: 20px; /* optional gutters */
        box-sizing: border-box;
    }
</style>

<div class="app-bar">
    <div class="logo">Matthew Kenyon</div>
    <nav>
        <a href="#games">Games</a>
        <a href="#apps">Apps</a>
        <a href="#about">About</a>
    </nav>
</div>

<!-- Section 1: Hero -->
<img src="Images/Uni Unity Scene.png" alt="Banner Image" class="main-banner" />
<h1 id="about">Game for Rehabilitation of Stroke</h1>
<p class="description">
    I’m a passionate software developer dedicated to creating intuitive, impactful programs that assist people.

    <br /><br />

    I attended Newcastle University, where I was awarded the Degree of Masters of Computing with First Class Honours in
    Computer Science (Game Engineering).
</p>

<hr class="section-divider" />

<!-- University Grades / Chart + Note (Section 2) -->
<style>
    .stats-section {
        max-width: 1000px;
        width: 100%;
        margin: 0 auto;
        padding-inline: 20px;
        display: flex;
        flex-direction: column;
        align-items: center;
    }

        .stats-section h2 {
            font-size: 2rem;
            margin-bottom: 30px;
            font-weight: 700;
            text-align: center;
        }

    /* Make chart and note sit side-by-side on desktop */
    .stats-content {
        display: flex;
        align-items: center;
        justify-content: center;
        gap: 40px;
        flex-wrap: wrap; /* stacks on small screens */
        text-align: left;
        width: 100%;
    }

    .chart-group {
        display: flex;
        flex-direction: column;
        align-items: center;
    }

    .chart-container {
        width: 180px;
        height: 180px;
        position: relative;
        flex-shrink: 0;
    }

    .chart-value {
        position: absolute;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
        font-size: 1rem;
        font-weight: 700;
        color: white;
        pointer-events: none;
    }

    .chart-item {
        display: flex;
        flex-direction: column;
        align-items: center;
    }

    .chart-title {
        margin-top: 8px;
        font-size: 1rem;
        font-weight: 600;
        color: #fff;
        text-align: center;
    }

    /* Legend (kept in case you add more items later) */
    .stats-text {
        font-size: 1.1rem;
        line-height: 1.6;
        min-width: 260px;
        text-align: left;
        margin: 0;
    }

        .stats-text p {
            display: flex;
            align-items: center;
            gap: 8px;
            margin: 6px 0;
            justify-content: flex-start;
        }

    .legend-square {
        width: 14px;
        height: 14px;
        border-radius: 3px;
        display: inline-block;
        flex-shrink: 0;
    }

    .legend-castle {
        background-color: #911f1f;
    }
    /* Castle Climbers */
    .legend-bucket {
        background-color: #41d5c3;
    }
    /* Bucket Connect */
    .legend-gww {
        background-color: #eda193;
    }
    /* Girls Who Walk */

    /* Note to the right of the chart */
    .stats-note {
        max-width: 500px;
        line-height: 1.7;
        opacity: 0.95;
    }

    /* When the legend wraps under the chart (tablet / narrow widths), center it */
    @@media (max-width: 1000px) {
        .stats-text {
            min-width: 0;
            width: 100%;
            margin: 0 auto;
            text-align: center;
            padding-inline: 20px;
            box-sizing: border-box;
        }

            .stats-text p {
                justify-content: center;
            }
        /* Center the note under the chart on smaller screens */
        .stats-note {
            text-align: center;
        }
    }

    /* Ensure desktop stays left-aligned when space allows */
    @@media (min-width: 1001px) {
        .stats-text {
            text-align: left;
        }

            .stats-text p {
                justify-content: flex-start;
            }

        .stats-note {
            text-align: left;
        }
    }
</style>

<div class="stats-section" id="games">
    <h2>University Grades</h2>
    <div class="stats-content">
        <!-- Charts group -->
        <div class="chart-group">
            <div class="chart-item">
                <div class="chart-container">
                    <canvas id="grade"></canvas>
                    <div class="chart-value" id="gradeValue">70%</div>
                </div>
                <p class="chart-title">Overall Grade</p>
            </div>
        </div>

        <!-- Note to the right -->
        <div class="stats-note">
            This project was completed as a dissertation at Newcastle University and was received very positively. It achieved a high First Class, with strong marks across each section. It was praised by health professionals for its thorough research into both targeted muscle engagement and cognitive benefits — including the use of colour theory to enhance memory — plus accessibility-focused design and comprehensive performance and progress tracking.
        </div>
    </div>
</div>

<hr class="section-divider" />

<!-- ===== Feature Cards (3-column) ===== -->
<style>
    .features-section {
        max-width: 1000px;
        width: 100%;
        margin: 0 auto;
        padding: 0 20px;
    }

        .features-section h2 {
            font-size: 2rem;
            font-weight: 700;
            text-align: center;
            margin: 10px 0 22px 0;
        }

    .features-grid {
        display: grid;
        grid-template-columns: repeat(3, 1fr);
        gap: 18px;
        align-items: stretch;
    }

    /* Card */
    .feature-card {
        background: rgba(255,255,255,0.06);
        border: 1px solid rgba(255,255,255,0.08);
        border-radius: 16px;
        padding: 20px 18px;
        display: flex;
        flex-direction: column;
        align-items: center;
        text-align: center;
        transition: transform .15s ease, box-shadow .15s ease, background .15s ease;
    }

        .feature-card:hover {
            transform: translateY(-2px);
            box-shadow: 0 8px 22px rgba(0,0,0,0.25);
            background: rgba(255,255,255,0.08);
        }

    .feature-icons {
        display: flex;
        justify-content: center;
        gap: 8px;
        margin-bottom: 10px;
    }

        .feature-icons img {
            width: 56px;
            height: 56px;
            object-fit: contain;
            opacity: 0.95;
        }

    .feature-title {
        font-weight: 800;
        font-size: 1.1rem;
        margin: 4px 0 6px 0;
        letter-spacing: .2px;
    }

    .feature-desc {
        font-size: .98rem;
        line-height: 1.55;
        opacity: 0.95;
        margin: 0;
        max-width: 32ch;
    }

    /* Responsive */
    @@media (max-width: 900px) {
        .features-grid {
            grid-template-columns: repeat(2, 1fr);
        }
    }

    @@media (max-width: 620px) {
        .features-grid {
            grid-template-columns: 1fr;
        }
    }
</style>



<!-- ===== Image + Text Section ===== -->
<style>
    .image-text-section {
        max-width: 1000px;
        width: 100%;
        margin: 40px auto;
        padding: 0 20px;
        display: flex;
        align-items: center;
        gap: 30px;
        flex-wrap: wrap;
    }

        .image-text-section img {
            flex: 1 1 300px;
            max-width: 400px;
            width: 100%;
            border-radius: 16px;
            object-fit: cover;
        }

    .image-text-content {
        flex: 1 1 300px;
        color: white;
    }

        .image-text-content h2 {
            font-size: 2rem;
            font-weight: 700;
            margin: 0 0 12px 0;
        }

        .image-text-content p {
            font-size: 1.05rem;
            line-height: 1.6;
            opacity: 0.95;
            margin: 0;
        }

    /* Center stacked on small screens */
    @@media (max-width: 700px) {
        .image-text-section {
            flex-direction: column;
            text-align: center;
        }

            .image-text-section img {
                max-width: 90%;
            }
    }
</style>

<section class="image-text-section">
    <img src="Images/Uni World 2.png" alt="Project Screenshot" />
    <div class="image-text-content">
        <h2>Features</h2>
        <p>
            There are 8 minigames for the patient to try. They are separated into 4 groups, with 2 unique movements
            targeted at each muscle in the hand. Three games are randomly chosen each time the user plays, so each experience
            is different and kept entertaining and varied.
        </p>
    </div>
</section>

<section class="image-text-section">
    <div class="image-text-content">
        <h2>Scene</h2>
        <p>
            The instructions for each game are shown beforehand, with diagrams to make it easy to play. These are presented
            until the user clicks or says “Play,” which will then start the game. The user also has the option to pause the game
            or replay using voice controls.
        </p>
    </div>
    <img src="Images/Uni World 3.png" alt="Project Screenshot" />
</section>


<hr class="section-divider" />
<section class="features-section">
    <h2>Software</h2>
    <div class="features-grid">
        <div class="feature-card">
            <div class="feature-icons">
                <img class="feature-icon" src="@IconRef.GetIcon("unity")" alt="Unity Icon">
                <img class="feature-icon" src="@IconRef.GetIcon("c#")" alt="C# Icon">
            </div>
            <div class="feature-title">Unity + C#</div>
            <p class="feature-desc">
                Unity was the best application to use with OpenCV, as the pinpoints in the hand could easily be treated as individual game objects. This made it easy to verify whether the hand movements were completed correctly, since only the proximity of the tracked points needed to be checked.
            </p>
        </div>
    </div>
</section>
<!-- Footer -->
<style>
    footer {
        width: 100%;
        padding: 20px;
        text-align: center;
        color: #ddd;
        font-size: 0.95rem;
        margin-top: 40px;
    }

        footer a {
            color: #e7571d;
            text-decoration: none;
            font-weight: 600;
            transition: color 0.3s;
        }

            footer a:hover {
                color: #fff;
            }

    .footer-links {
        margin-top: 8px;
        display: flex;
        justify-content: center;
        gap: 20px;
        flex-wrap: wrap;
    }
</style>

<hr class="section-divider" />
<footer>
    <div>© @DateTime.Now.Year Matthew Kenyon — All Rights Reserved</div>
    <div class="footer-links">
        <a href="mailto:matthew.kenyon@example.com">Email</a>
        <a href="https://github.com/mattkenyon01" target="_blank">GitHub</a>
        <a href="https://www.linkedin.com/in/matthew-kenyon" target="_blank">LinkedIn</a>
    </div>
</footer>

<!-- Simple donut chart renderer (value = percent, remainder = 100 - value) -->
<script>
    window.renderChart = function (chartId, valuePercent) {
        const el = document.getElementById(chartId);
        if (!el || !window.Chart) return;

        const ctx = el.getContext('2d');

        // Clamp 0..100
        const percent = Math.max(0, Math.min(100, Number(valuePercent) || 0));
        const remainder = 100 - percent;

        // Destroy previous instance if any
        if (el._chartInstance) el._chartInstance.destroy();

        el._chartInstance = new Chart(ctx, {
            type: 'doughnut',
            data: {
                labels: ['Achieved', 'Remaining'],
                datasets: [{
                    data: [percent, remainder],
                    /* keep transparent page background; donut has its own segment fills */
                    backgroundColor: ['#4caf50', 'rgba(255,255,255,0.12)'],
                    borderWidth: 0
                }]
            },
            options: {
                responsive: true,
                maintainAspectRatio: false,
                cutout: '65%',
                animation: { duration: 700 },
                plugins: {
                    legend: { display: false },
                    tooltip: { enabled: true }
                }
            }
        });

        // Optional center text update if you keep a value element
        const centerEl = document.getElementById(chartId + 'Value') || document.getElementById('gradeValue');
        if (centerEl) centerEl.textContent = percent + '%';
    };
</script>

@code {
    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await JS.InvokeVoidAsync("renderChart", "grade", 70);
        }
    }
}
